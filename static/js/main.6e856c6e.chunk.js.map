{"version":3,"sources":["Book.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Book","props","react_default","a","createElement","className","imgUrl","src","thumbnail","alt","style","width","title","authors","map","author","publisher","id","href","info","role","Footer","react_fontawesome_index_es","icon","faCopyright","library","add","faSearch","faBook","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","items","searchWord","handleChange","bind","assertThisInitialized","handleSubmit","e","setState","target","_this2","fetch","then","res","json","data","bookshelf","j","length","push","slice","preventDefault","onSubmit","type","placeholder","onChange","shelf","book","src_Book","volumeInfo","imageLinks","infoLink","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e856c6e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Book(props) {\r\n    //console.log(props)\r\n    return (\r\n        <div className=\"row col-sm-12 col-md-6 mt-5\">\r\n            {props.imgUrl ? (\r\n                <div className=\"imgdiv\">\r\n                    <img className=\"img-fluid\" src={props.imgUrl.thumbnail} alt=\"\" />\r\n                </div>\r\n            ) : (\r\n                    <p>No image available</p>\r\n                )}\r\n            <div className=\"card border-0\" style={{ width: '20rem' }}>\r\n                <div className=\"card-body text-left p-1\">\r\n                    <h5 className=\"card-title\">{props.title}</h5>\r\n                    {props.authors ? (\r\n                        <div>\r\n                            {props.authors.map((author) =>\r\n                                <h6 className=\"card-subtitle mb-2 text-muted\">{author}</h6>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                            <h6 className=\"card-subtitle mb-2 text-muted\">No Authors listed</h6>\r\n                        )}\r\n                    <p className=\"card-text\">{props.publisher}</p>\r\n                    <a id=\"seymour\" href={props.info} className=\"card-link btn btn-warning position-relative\" role=\"button\">See More</a>\r\n                    <hr className=\"base\" />\r\n                </div>\r\n            </div>\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCopyright } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <hr className=\"mt-5\"/>\r\n            <p className=\"text-center\">Powered by <a href=\"https://developers.google.com/books/\">Google Books</a></p>\r\n            <p className=\"text-center mt-5\"><FontAwesomeIcon icon={faCopyright} /> 2019 willjw3. All Rights Reserved</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport './App.css';\nimport Book from './Book';\nimport Footer from './Footer';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\nimport { faBook } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faSearch)\nlibrary.add(faBook)\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      items: [],\n      searchWord: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ value: e.target.value });\n  }\n\n  handleSubmit(e) {\n    //alert('A name was submitted: ' + this.state.value);\n    fetch('https://www.googleapis.com/books/v1/volumes?q=' + this.state.value)\n    .then((res) => res.json())\n    /*.then(data => this.setState({items: data.items}));*/\n    .then((data) => {\n      var bookshelf = [];\n      for (let j = 0; j < data.items.length; j+=2) {\n        bookshelf.push(data.items.slice(j, j + 2));\n      }\n      this.setState({items: bookshelf})\n      //this.setState({items: data.items});\n      //console.log(data);\n      //console.log(items);\n    })\n    this.setState({value: '', searchWord: this.state.value})\n    e.preventDefault();\n  }\n\n  render() {\n    const { items } = this.state;\n    return (\n      <div className=\"\">\n        <h1 className=\"text-center d-block\">Book Finder <FontAwesomeIcon icon={faBook} /></h1>\n        <div id=\"top-bar\" className=\"container mb-5\">\n          <div className=\"row justify-content-center\">\n            <form id=\"search-form\" className=\"col-xs-6 col-sm-4 d-block\" onSubmit={this.handleSubmit}>\n              <input className=\"d-block form-control mt-3\" type=\"text\" value={this.state.value} placeholder=\"Enter search keyword\" onChange={this.handleChange} />\n              <div>\n                <button id=\"get-btn\" type=\"submit\" value=\"Submit\" className=\"btn btn-success d-block form-control mt-3\"><FontAwesomeIcon icon={faSearch} /> Get Books</button> \n              </div>\n            </form>\n          </div>\n        </div>\n\n        \n        {items.length ? (\n              <div>\n            <h6 className=\"sticky text-right mr-5\"><a href=\"#top-bar\"><span className=\"badge badge-warning\">Search Again</span></a></h6>\n                <h4 className=\"mb-5 text-center\">Displaying results for \"{this.state.searchWord}\"</h4>\n                <div id=\"bookshelf\" className=\"container mt-3\">\n                {items.map(shelf =>\n                  <div className=\"row justify-content-center shelf\">\n                     {shelf.map(book => \n                       <Book\n                         imgUrl={book.volumeInfo.imageLinks}\n                         title={book.volumeInfo.title}\n                         authors={book.volumeInfo.authors}\n                         publisher={book.volumeInfo.publisher}\n                         info={book.volumeInfo.infoLink}\n                       />\n                      )}\n                  </div>\n                )}\n                </div>\n              </div>\n        ) : (\n          <h4 className=\"text-center\">No Books to Display Yet</h4>\n        )}\n\n          <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}